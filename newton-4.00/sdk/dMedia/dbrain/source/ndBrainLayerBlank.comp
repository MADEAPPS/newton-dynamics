/* Copyright (c) <2003-2022> <Newton Game Dynamics>
* 
* This software is provided 'as-is', without any express or implied
* warranty. In no event will the authors be held liable for any damages
* arising from the use of this software.
* 
* Permission is granted to anyone to use this software for any purpose,
* including commercial applications, and to alter it and redistribute it
* freely
*/
#version 450

#define WORKGROUP_SIZE  256
layout (local_size_x = WORKGROUP_SIZE) in;

layout(std140, binding = 0) uniform param
{
    uint m_inputSize;
    uint m_outputSize;
    uint m_weightsStartOffset;

    uint m_inputOutputSize;
    uint m_inputOutputStartOffset;
};

layout(std430, binding = 1) buffer inputOutputBuffer
{
    float m_inputOutputData[];
};

layout(std430, binding = 2) readonly buffer newralNetParameters
{
    float m_weightsAndBias[];
};

// a matrix time a vector by interating over each row of the matrix 
// calculating an dot product of that row time the vector and adding the bias value.
void main() 
{
}
