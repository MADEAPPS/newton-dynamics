/* Copyright (c) <2003-2016> <Newton Game Dynamics>
* 
* This software is provided 'as-is', without any express or implied
* warranty. In no event will the authors be held liable for any damages
* arising from the use of this software.
* 
* Permission is granted to anyone to use this software for any purpose,
* including commercial applications, and to alter it and redistribute it
* freely
*/  

#version 450 core

layout(location = 0) in vec3 in_position;
layout(location = 1) in vec3 in_normal;
layout(location = 2) in vec2 in_uv;

uniform mat4 viewModelMatrix;
uniform mat4 projectionMatrix;
uniform mat4 modelWorldMatrix;

out vec2 uv;
out vec3 normal;
out vec3 posit;
out vec4 worldPosit;

void main()
{	
	uv = in_uv;
	worldPosit = modelWorldMatrix * vec4(in_position, 1.0);
	posit = vec3 (viewModelMatrix * vec4(in_position, 1.0));
	normal = vec3 (normalize (viewModelMatrix * vec4(in_normal, 0.0)));
	gl_Position = projectionMatrix * vec4 (posit, 1.0f);
}